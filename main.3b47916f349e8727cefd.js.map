{"version":3,"sources":["webpack:///./images/explosion.png","webpack:///./images/big-boss.png","webpack:///./js/refs.js","webpack:///./js/components/jetsDB.js","webpack:///./js/components/game-rules.js","webpack:///./js/api/stopWatch-services.js","webpack:///./js/components/result-modal.js","webpack:///./js/api/game-score-services.js","webpack:///./index.js","webpack:///./js/components/rules-modal.js","webpack:///./images/f-35.png","webpack:///./images/civil-plane.png","webpack:///./images/mig-29.png"],"names":["module","exports","refs","timerMins","document","querySelector","timerSecs","newGameBtn","stopWatchDisplay","startResumeBtn","gameCounter","resultTable","rulesBtn","jetsDB","src","class","alt","stopWatch","onTick","this","startTime","intervalId","start","isActive","setInterval","time","pad","stop","clearTimeout","pause","get","set","newTime","value","String","padStart","secs","textContent","toString","onPauseHandler","disabled","renderFromLS","basicLightbox","show","modalRefs","modal","modalRecordFormInput","modalRecordFormBtn","playerScore","addEventListener","gameTableScore","setNewRecord","insertAdjacentHTML","classList","remove","localStorage","setItem","JSON","stringify","recordString","console","log","newSore","modalOnFinishGameHandler","gameTable","bossCounter","lightningCounter","removeEventListener","counterHandler","resumeBattle","randomNumberHandler","min","max","Math","floor","random","createPlane","el","indexEl","onJetClick","e","target","nodeName","contains","add","setTimeout","parentNode","numberCoverPlane","i","addCoverPlaneHandler","name","score","place","setScore","push","newResult","saveScore","getItem","innerHTML","parse","map","scoreItem","scoreLine","Object","values","startPositionGenerate"],"mappings":"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","file":"main.3b47916f349e8727cefd.js","sourcesContent":["module.exports = __webpack_public_path__ + \"images/explosion.png\";","module.exports = __webpack_public_path__ + \"images/big-boss.png\";","const refs = {\r\n        timerMins: document.querySelector('[data-value=\"mins\"]'),\r\n        timerSecs: document.querySelector('[data-value=\"sec\"]'),\r\n        newGameBtn: document.querySelector('.new-game-btn-js'),\r\n        stopWatchDisplay: document.querySelector('.stopwatch-display'),\r\n        startResumeBtn: document.querySelector('.start-resume-btn-js'),\r\n        gameCounter: document.querySelector('.counter-js'),\r\n        resultTable: document.querySelector('.result-table'),\r\n        rulesBtn: document.querySelector('.rules-btn'),\r\n}\r\n\r\nexport default refs;","const jetsDB = [\r\n    {src:'./images/f-35.png', class:'lightning', alt:'lightning'}, \r\n    {src:'./images/mig-29.png', class:'mig', alt:'mig'}, \r\n    {src:'./images/big-boss.png', class:'boss', alt:'boss'}, \r\n    {src:'./images/civil-plane.png', class:'civil', alt:'civil'}, \r\n    {src:'./images/explosion.png', class:'explosion', alt:'explosion'}, \r\n];\r\nexport default jetsDB;","import StopWatch from '../api/stopWatch-services';\r\nimport refs from '../refs';\r\nimport jetsDB from '../components/jetsDB'\r\nimport {modalOnFinishGameHandler} from './result-modal'\r\n\r\nconst stopWatch = new StopWatch({\r\n  onTick:updateClockFace\r\n})\r\n\r\nconst gameTable = document.querySelector('.game-zone');\r\n\r\n\r\nlet gameCounter = 0;\r\nlet bossCounter = 2;\r\nlet lightningCounter = 1;\r\n\r\n\r\nfunction updateClockFace (secs) {\r\n  refs.stopWatchDisplay.textContent = `00:${secs}`;\r\n  stopWatch.time = secs;\r\n  if (refs.stopWatchDisplay.textContent.toString() === '00:00') {\r\n    onPauseHandler()\r\n    refs.startResumeBtn.disabled = true;\r\n    modalOnFinishGameHandler()\r\n  }\r\n}\r\n\r\nfunction newGameHandler () {\r\n  stopWatch.stop();\r\n  refs.startResumeBtn.disabled = false;\r\n  refs.startResumeBtn.textContent = 'Pause';\r\n  refs.stopWatchDisplay.textContent = `01:00`;\r\n  stopWatch.startTime = 60;\r\n  startPositionGenerate(gameTable);\r\n  resumeBattle();\r\n  counterReset();\r\n}\r\n\r\nfunction pauseGameHandler () {\r\n  if (refs.startResumeBtn.textContent === 'Pause') {\r\n    onPauseHandler();\r\n    refs.startResumeBtn.textContent = 'Resume';\r\n  } else {\r\n    resumeBattle()\r\n  }\r\n}\r\n\r\nfunction onPauseHandler() {\r\n  refs.newGameBtn.disabled = false;\r\n  gameTable.removeEventListener('click', counterHandler)\r\n  stopWatch.stop();\r\n}\r\n\r\nfunction resumeBattle () {\r\n  gameTable.addEventListener('click', counterHandler);\r\n  stopWatch.start();\r\n  refs.newGameBtn.disabled = true;\r\n  refs.startResumeBtn.textContent = 'Pause';\r\n}\r\n\r\nfunction startPositionGenerate (el) {\r\n  el.innerHTML='';\r\n  for (let i = 0; i < 10; i+=1) {\r\n    createPlane(el);\r\n  };\r\n}\r\n\r\nfunction randomNumberHandler (min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nfunction createPlane(el) {\r\n  const indexEl = randomNumberHandler(0,3);\r\n  el.insertAdjacentHTML(\r\n    'afterbegin',\r\n    ` <div class=\"jet\"><img class=${jetsDB[indexEl].class} src=${jetsDB[indexEl].src} alt=${jetsDB[indexEl].alt}></div>`,\r\n  );\r\n}\r\n\r\nfunction onJetClick (e) {\r\n  refs.gameCounter.textContent = gameCounter;\r\n  if (e.target.nodeName !== 'IMG') {\r\n    return\r\n  } else if (e.target.classList.contains('destroy') || e.target.classList.contains('mig') || e.target.classList.contains('civil')) {\r\n   e.target.src='./images/explosion.png';\r\n    e.target.classList.add('disable')\r\n    setTimeout(() => {\r\n      e.target.parentNode.remove();\r\n      addCoverPlaneHandler(gameTable)\r\n    }, 2000);\r\n  }\r\n}\r\n\r\nfunction counterHandler (e) {\r\n  if (e.target.classList.contains('disable')) {\r\n    return\r\n  }\r\nif (e.target.classList.contains('mig')) {\r\n  e.target.classList.add('destroy');\r\n  gameCounter+=1;\r\n}  else if (e.target.classList.contains('lightning')) {\r\n  lightningCounter-=1\r\n  if (lightningCounter === 0) {\r\n    gameCounter+=2;\r\n    e.target.classList.add('destroy');\r\n    lightningCounter = 2;\r\n  }\r\n} else if (e.target.classList.contains('boss')){\r\n  bossCounter-=1;\r\n  if (bossCounter === 0) {\r\n    e.target.classList.add('destroy');\r\n    gameCounter+=3;\r\n    bossCounter = 3;\r\n}\r\n}else if (e.target.classList.contains('civil')) {\r\n  e.target.classList.add('destroy');\r\n  gameCounter-=5\r\n} \r\nonJetClick(e)\r\n};\r\n\r\nfunction counterReset () {\r\n  gameCounter = 0;\r\n  bossCounter = 3;\r\n  lightningCounter = 2;\r\n  refs.gameCounter.textContent = '0';\r\n}\r\n\r\nfunction addCoverPlaneHandler (el) {\r\n  const numberCoverPlane = randomNumberHandler(0,3)\r\n  for (let i = 0; i < numberCoverPlane; i+=1) {\r\n    createPlane(el);\r\n  };\r\n}\r\n\r\nexport { newGameHandler, pauseGameHandler, gameCounter }","export default class StopWatch {\r\n    constructor({onTick}) {\r\n        this.startTime =60;\r\n        this.intervalId = null;\r\n        this.onTick = onTick;\r\n    }\r\n\r\n    start() {\r\n        this.isActive = true;\r\n        this.intervalId = setInterval(()=>{\r\n        this.startTime = this.startTime - 1; \r\n        const time = this.pad(this.startTime);\r\n        this.onTick(time)\r\n        }, 1000) \r\n    }\r\n\r\n    stop() {\r\n        clearTimeout(this.intervalId);\r\n        this.isActive = false;\r\n    }\r\n\r\n    pause() {\r\n        clearTimeout(this.intervalId);\r\n        this.isActive = false;\r\n    }\r\n\r\n    get () {\r\n       return this.time;\r\n    }\r\n\r\n    set (newTime) {\r\n        this.time = newTime;\r\n    }\r\n    pad(value) {\r\n        return String(value).padStart(2,'0');\r\n      }\r\n}","import * as basicLightbox from 'basiclightbox';\r\nimport 'basiclightbox/dist/basicLightbox.min.css';\r\nimport {gameCounter} from './game-rules';\r\nimport refs from '../refs';\r\nimport GameTableResult from '../api/game-score-services'\r\n\r\nconst gameTableScore = new GameTableResult();\r\n\r\nfunction modalOnFinishGameHandler () {\r\n  renderFromLS()\r\n  const finishGame = basicLightbox.create(`\r\n    <div class=\"modal__wrapper\">\r\n    <input type=\"text\" placeholder=\"Enter your name...\" class=\"modal__input\">\r\n    <button class=\"modal__btn\" type=\"submit\">Save</button>\r\n    <p class=\"modal__title\">You score:\r\n    <span class=\"modal__score-display\">${gameCounter}</span> \r\n    </p>\r\n  </div>`)\r\n  finishGame.show()\r\n  const modalRefs = modalListener();\r\n  const playerScore = refs.gameCounter.textContent;\r\n  modalRefs.modalRecordFormBtn.addEventListener('click',()=>{\r\n  gameTableScore.setNewRecord(modalRefs.modalRecordFormInput.value,playerScore);\r\n  refs.resultTable.insertAdjacentHTML('beforeend', `\r\n  <div class=\"col-12 score-line\">\r\n  <p class=\"score-name\">${modalRefs.modalRecordFormInput.value}</p>\r\n  <span class=\"score-span\">:</span>\r\n  <p>${playerScore}</p>\r\n  </div>\r\n  `)\r\n  modalRefs.modal.classList.remove('basicLightbox--visible');\r\n  loadResult()\r\n  \r\n});\r\n};\r\n\r\nfunction modalListener () {\r\n  return {\r\n    modal: document.querySelector('.basicLightbox'),\r\n    modalRecordFormInput:document.querySelector('.modal__input'),\r\n    modalRecordFormBtn:document.querySelector('.modal__btn'),\r\n  }\r\n}\r\n\r\n\r\nfunction loadResult () {\r\n localStorage.setItem('game-result',JSON.stringify(gameTableScore.recordString));\r\n console.log('zz',gameTableScore.newSore);\r\n}\r\n\r\nfunction renderFromLS () {\r\n  const saveScore = localStorage.getItem('game-result');\r\n  refs.resultTable.innerHTML = '';\r\n   if (saveScore) {\r\n      gameTableScore.newSore = JSON.parse(localStorage.getItem('game-result'))\r\n      gameTableScore.newSore.map(scoreItem => {\r\n      const scoreLine = Object.values(scoreItem);\r\n      refs.resultTable.insertAdjacentHTML('beforeend', `\r\n      <div class=\"col-12 score-line\">\r\n      <p class=\"score-name\">${scoreLine[0]}</p>\r\n      <span class=\"score-span\">:</span>\r\n      <p class=\"score\">${scoreLine[1]}</p>\r\n      </div>\r\n      `)\r\n    ;})\r\n   }\r\n}\r\n\r\nexport  { modalOnFinishGameHandler, renderFromLS};","export default class GameTableResult {\r\n    constructor(name,score) {\r\n    this.name = name;\r\n    this.score = score;\r\n    this.place = 1;\r\n    this.recordString = [];\r\n    }\r\n\r\n    setScore(name, score) {\r\n        return {\r\n            name: name,\r\n            score: score\r\n        }\r\n    }\r\n\r\n    get newSore () {\r\n        return this.recordString;\r\n    }\r\n    set newSore (newResult) {\r\n        this.recordString = newResult;\r\n    }\r\n    \r\n    setNewRecord(name, score) {\r\n        this.recordString.push(this.setScore(name, score));\r\n    }\r\n}","\r\nimport './css/normalize.css'\r\nimport './styles.css';\r\nimport refs from './js/refs';\r\nimport lightning from './images/f-35.png';\r\nimport boss from './images/big-boss.png';\r\nimport mig from './images/mig-29.png';\r\nimport civilPlane from './images/civil-plane.png';\r\nimport explosion from './images/explosion.png';\r\nimport { renderFromLS } from './js/components/result-modal'\r\nimport { newGameHandler, pauseGameHandler } from './js/components/game-rules'\r\nimport modalRulesBtnHandler from './js/components/rules-modal'\r\n\r\n\r\nrenderFromLS();\r\n\r\nrefs.rulesBtn.addEventListener('click', modalRulesBtnHandler)\r\nrefs.newGameBtn.addEventListener('click',newGameHandler)\r\nrefs.startResumeBtn.addEventListener('click',pauseGameHandler)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function showResult () {\r\n\r\n// }","import * as basicLightbox from 'basiclightbox';\r\nimport 'basiclightbox/dist/basicLightbox.min.css';\r\n\r\n\r\nexport default function modalRulesBtnHandler () {\r\n    const gameRules = basicLightbox.create(`\r\n    <div class=\"rules__wrapper\">\r\n        <h2 class=\"rules__title\">Правила игры</h2>\r\n            <ul class=\"rules__list row\">\r\n                <li class=\"rules__item\">Игровая сессия длится 1 минуту.</li>\r\n                <li class=\"rules__item\">Задача: сбивать вражеские самолеты с помощь клика мыши.</li>\r\n                <li class=\"rules__item\">Для уничтожения определенного типа самолета нужно определенное количество кликов мыши. Ниже предоставлены более подробные инструкции:</li>\r\n                <li class=\"rules__item\">- для уничтожение миг-29 требуется 1 клик, за сбитие присуждается 1 балл;</li>\r\n                <li class=\"rules__item\">- для уничтожение f-35 lightning требуется 2 клика, за сбитие присуждается 2 балла;</li>\r\n                <li class=\"rules__item\">- для уничтожение самолета босса требуется 3 клика, за сбитие присуждается 3 балла;</li>\r\n                <li class=\"rules__item\">- для уничтожение гражданского самолета требуется 1 клик, за сбитие снимается 5 баллов.</li>\r\n            </ul>\r\n    </div>\r\n    `)\r\n    gameRules.show()\r\n}","module.exports = __webpack_public_path__ + \"images/f-35.png\";","module.exports = __webpack_public_path__ + \"images/civil-plane.png\";","module.exports = __webpack_public_path__ + \"images/mig-29.png\";"],"sourceRoot":""}